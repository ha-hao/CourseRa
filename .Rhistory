a <- available.packages()
head(rownames(a),3)
install.packages("slidify")
insteall.packages(c("slidify","ggplot2"))
install.packages(c("slidify","ggplot2"))
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(swirl
)
rm(list=ls())
install_course_zip("/Users/liyujun/Downloads", multi=TRUE,
which_course="R Programming")
install_course_zip("/Users/liyujun/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
swirl()
5+7
main
main()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[ , 11:18]
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flag_colors, sum([["cname"]]))
> lapply(flag_colors, sum)
lapply(flag_colors, sum)
sapply(lapply(flag_colors, sum))
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
lapply()lapply(flag_shapes, range)
sapply(flag_shapes, range)
info()
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,
| 4, 5, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags,unqiue)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
info()
bye()
library(swirl)
swirl()
info()
main()
main()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
flags$landmass
landmass
table(flags$landmass)
flags$animate
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmasses,summary)
> tapply(flags$population,flags$landmass,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants])
names(plants)
head(plants)
heads(plants,10)
head(plants,10)
tail()
tail(plants,15)
summary(plants)
plants$Active_Growth_Period
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(6,4,replace=true)
sample(6,4,replace=T)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(1,100,porb=c(0.3,0.7))
sample(1,100,replacement=TRUE, porb=c(0.3,0.7))
> sample(1,100,replace=TRUE, porb=c(0.3,0.7))
sample(1,100,replace=TRUE, porb=c(0.3,0.7))
sample(1,100,replace=TRUE, prob=c(0.3,0.7))
sample(c(1,2),100,replace=TRUE, prob=c(0.3,0.7))
sample(c(0,1),100,replace=TRUE, prob=c(0.3,0.7))
sample(c(1,2),100,replace=TRUE, prob=c(0.7,0.3))
sample(c(1,0),100,replace=TRUE, prob=c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob
| = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips(100,size=1,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
rpois(5,mean=10)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100, rpois(5, 10))
my_pois.
my_pois
cm<- saaply(my_pois,mean)
cm<- saply(my_pois,mean)
cm<- sapply(my_pois,mean)
sapply(my_pois,mean)
cm <- colMeans(my_pois) to
cm <- colMeans(my_pois)
hist(cm)
sapply
?saplly
?sapply
swirl()
my_pois
x
x <- numeric(100)
x <- numeric()
for(i=1;i<=100;i++)
for(i=1;i<=100;i++) {append(x,rnorm(5))}
for(i in 1:100) {append(x,rnorm(5))}
x
for(i in 1:100) {append(x,rnorm(5))}
i
rnorm(5)
append(x,norm(5))
append(x,rnorm(5))
x <- vector()
append(x,rnorm(5))
append(1:5, 0:1, after = 3)
y=1:5
append(y,0:1)
for(i in 1:100) {x<-append(x,rnorm(5))}
x
x<-vector()
for(i in 1:100) {append(x,rnorm(5))}
for(i in 1:100) {x<-append(x,rnorm(5))}
x
x<-vector(numeric(5))
x<-list(nemeric(5))
x<-list(numeric(5))
for(i in 1:100) {x<-append(x,rnorm(5))}
x
x<-list()
x<-append(x,c(1:2))
x
swirl9
swirl()
library(swirl)
swirl()
data(cars)
?cars
head(cars)
summary(cats)
summary(cars)
plot(cars)
?plot
plot(car$s,car$d)
plot(cars$s,cars$d)
plot(x = cars$speed, y = cars$dist)
plot(cars$distance,cars$speed)
plot(x=cars$distance,y=cars$speed)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab=Speed)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,main="My Plot", xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,main="My Plot")
plot(cars, main = "My Plot")
plot(cars,xlab="Speed",ylab="Stopping Distance")
plot(cars, sub = "My Plot Subtitle")
?paf
?par
plot(cars, bty="l")
plot(cars, bty="n")
plot(Cars,col=2)
plot(cars,col=2)
> plot(Cars,xlim =
c(10, 15))
plot(Cars,xlim =c(10, 15))
plot(cars,xlim =c(10, 15))
plot(cars,xlim =c(20, 30)/2)
plot(cars,xlim =c(20.0, 30.0)/2)
(cars,pch=2)
plot(cars,pch=2)
data(mtcats)
data(mtcars)
play()
dim(mtcars)
attibute(mtcars)
attribute(mtcars)
summart(mtcars)
summary(mtcars)
nxt()
boxplot()
?boxplot
boxplot(formula = mpg~cyl, data=mtcars)
hist(mtcats$mpg)
hist(mtcars$mpg)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2 <- POSIXlt(Sys,time())
t2 <- as.POSIXlt(Sys,time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t2)
months(t1)
quaters(t2)
quarter(t2)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- /strptime(t3,"%B %d, %Y %H:%M" )
t4 <- strptime(t3,"%B %d, %Y %H:%M" )
t4
t3
t4
class(t4)
Sys.time() >t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
swirl()
lm()
?lm
swirl
swirl()
install_course_zip("/Users/liyujun/Downloads/swirl_courses-master.zip", multi=TRUE, which_course="Regression Models")
install_course_zip("/Users/liyujun/Downloads/swirl_courses-master.zip", multi=TRUE, which_course="Getting and Cleaning Data")
install_course_zip("/Users/liyujun/Downloads/swirl_courses-master.zip", multi=TRUE, which_course="Statistical Inference")
n <- 3
cube <- function(n) {
sq <- function() n*n
n*sq()
}
cube(2)
b=3
f = function () {
g = function () a+b
a = 10
g()
}
h = function () {
a = 100
b = 200
f()
}
h()
h = function () {
f = function () {
g = function () a+b
a = 10
g()
}
a = 100
b = 200
f()
}
b=3
h()
swirl()
library(swirl)
swirl()
swirl()
galton
head(galton)
summary(galton)
plot(child~parent, galton)
?jitter
plot(jitter(child,10) ~ parent, galton)
plot(jitter(child,1) ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
?formula
?lm
lm(child~parent,galton)
regrline <- lm(child ~ parent, galton)
?abline
?lwd
abline(regrline, color=red)
abline(regrline, col=3)
abline(regrline, lwd=3, col=red)
abline(regrline, lwd=3, col='red')
summary(regrline)
MAIN()
main()
fit <- lm( child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
summary(fit)
ols.ic <- fit$coef[1]
ols.slope <-fit$coef[2]
lhs-rhs
rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est)
est
varEst <- var(est(ols.slope, ols.ic))
?cov
cov(est(ols.slope, ols.ic), fit$residual)
all.equal(varChild,varEst+varRes)
efit <- lm(accel~mag+dist, attenu)
summary(efit)
?lm
mean(efit$residuals)
cov(efit)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(gpa_nor, gch_nor)
l_nor<- lm(gch_nor,gpa_nor)
l_nor<- lm(gch_nor ~ gpa_nor)
class(freData)
class(freqData)
summary(freqData)
summary(galton)
summary(table(galton$cild, galton$parent))
summary(table(galton$child, galton$parent))
table(galton$child, galton$parent)
head(freqData)
as.vector(freqData$parent)
as.numeric(as.vector(freqData$parent)
)
freqData$parent)
freqData$parent
swirl()
fit <- lm (child~parent, galton)
sqrt((sum(fit$residuals^2)/n-2)
)
> sqrt((sum(fit$residuals^2)/(n-2)))
sqrt((sum(fit$residuals^2)/(n-2)))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)#sigma
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum (galton$child - mu)
sTot <- sum((galton$child-mu)^2)
sRes <- sum((galton$child - (fit$coef[1] + fit$coef[2]*galton$parent))
)
sRes <- deviance(fit)
1-sRes/sTot
fit$r
summary(fit)$r
summary(fit)$r.squared
cor(galton$parent~galton$child)
cor(galton$parent,galton$child)
cor(galton$parent,galton$child)^2
galton(928.)
?rep\
?rep
ones<- rep(1, nrow(galton))
class(ones)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
library(swril)
library(swirl)
swirl()
swirl()
swirl()
4
swirl()
0
0
0
0
main()
main()
summary(swiss)
all <- (Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examniation, swiss$Education)
cor(swiss$Examniation ~ swiss$Education)
e
?cor
cor(swiss$Examination, swiss$Education)
cor(swiss$Agricuture, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
?makelms
??makelms
makelms <- function(){
# Store the coefficient of linear models with different independent variables
cf <- c(coef(lm(Fertility ~ Agriculture, swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education + Examination,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality, swiss))[2])
print(cf)
}
makelms()
ec <- swiss$Examination + swiss$Catholic
summary(swiss$Examination)
swiss$Examination
efit <- lm(Fertility ~ . + ec, swiss)
summary(Efit)
summary(efit)
all$coefficients-efit$coefficients
getwd()
x <- c(0,18,-1.54,0,42,0,95)
w <- c(2,1,3,1)
sum(x)
w*w
x.*w
sum(x*w)/sum(x)
x <- c(0.18,-1.54,0.42,0.95)
sum(x*w)/sum(x)
sum(x*w)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
swirl()
package(swirl)
library(swirl)
swirl()
swirl()
0
0
main()
swirl()
choose(5,3) * 0.8^3 * 0.2^2 + choose(5,4) * 0.8^4 * 0.2^1 + 0.8^5
?pbinom
pbinom(2,5,0.8,lower.tail=FALSE)
0
main()
getwd()
setwd("/Users/liyujun/Documents/WDforR")
list.files("/Users/liyujun/Documents/WDforR")
setwd("/Users/liyujun/Documents/WDforR/CourseRa")
dateDownloaded <- date()
dateDownloaded
dateDownloaded
?file.download
